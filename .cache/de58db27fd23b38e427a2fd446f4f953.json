{"dependencies":[{"name":"/Users/nrstack/Projects/contact-widget/.babelrc","includedInParent":true,"mtime":1518883415000},{"name":"/Users/nrstack/Projects/contact-widget/package.json","includedInParent":true,"mtime":1518883465000}],"generated":{"js":"var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar edgar = 'edgar';\nvar logger = function logger(_ref) {\n  var message = _ref.message;\n  return console.log('logger: ' + message);\n};\n\nvar message = { message: 'edgar' };\nlogger(_extends({}, message, { message: 'new' }));","map":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"name":"edgar","generated":{"line":3,"column":4},"source":"index.js","original":{"line":1,"column":6}},{"generated":{"line":3,"column":12},"source":"index.js","original":{"line":1,"column":14}},{"generated":{"line":3,"column":19},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"name":"logger","generated":{"line":4,"column":4},"source":"index.js","original":{"line":2,"column":6}},{"generated":{"line":4,"column":13},"source":"index.js","original":{"line":2,"column":15}},{"name":"logger","generated":{"line":4,"column":22},"source":"index.js","original":{"line":2,"column":6}},{"generated":{"line":4,"column":28},"source":"index.js","original":{"line":2,"column":15}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":2,"column":15}},{"name":"message","generated":{"line":5,"column":6},"source":"index.js","original":{"line":2,"column":18}},{"generated":{"line":5,"column":13},"source":"index.js","original":{"line":2,"column":15}},{"name":"message","generated":{"line":5,"column":21},"source":"index.js","original":{"line":2,"column":18}},{"generated":{"line":5,"column":28},"source":"index.js","original":{"line":2,"column":15}},{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":2,"column":15}},{"name":"console","generated":{"line":6,"column":9},"source":"index.js","original":{"line":2,"column":32}},{"name":"log","generated":{"line":6,"column":17},"source":"index.js","original":{"line":2,"column":40}},{"generated":{"line":6,"column":20},"source":"index.js","original":{"line":2,"column":32}},{"name":"message","generated":{"line":6,"column":34},"source":"index.js","original":{"line":2,"column":55}},{"generated":{"line":6,"column":41},"source":"index.js","original":{"line":2,"column":32}},{"generated":{"line":6,"column":42},"source":"index.js","original":{"line":2,"column":15}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":2,"column":15}},{"generated":{"line":7,"column":1},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"name":"message","generated":{"line":9,"column":4},"source":"index.js","original":{"line":4,"column":6}},{"generated":{"line":9,"column":14},"source":"index.js","original":{"line":4,"column":16}},{"name":"message","generated":{"line":9,"column":16},"source":"index.js","original":{"line":4,"column":18}},{"generated":{"line":9,"column":25},"source":"index.js","original":{"line":4,"column":27}},{"generated":{"line":9,"column":32},"source":"index.js","original":{"line":4,"column":16}},{"generated":{"line":9,"column":34},"source":"index.js","original":{"line":4,"column":0}},{"name":"logger","generated":{"line":10,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"name":"message","generated":{"line":10,"column":20},"source":"index.js","original":{"line":5,"column":11}},{"generated":{"line":10,"column":27},"source":"index.js","original":{"line":5,"column":0}},{"name":"message","generated":{"line":10,"column":31},"source":"index.js","original":{"line":5,"column":20}},{"generated":{"line":10,"column":40},"source":"index.js","original":{"line":5,"column":29}},{"generated":{"line":10,"column":45},"source":"index.js","original":{"line":5,"column":0}}],"sources":{"index.js":"const edgar = 'edgar';\nconst logger = ({ message }) => console.log(`logger: ${message}`);\n\nconst message = { message: 'edgar' };\nlogger({...message, message: 'new' });"},"lineCount":null}},"hash":"48a319b05b7b0f9a74f4247343174b84","cacheData":{"env":{}}}